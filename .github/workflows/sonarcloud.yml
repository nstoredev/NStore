name: SonarCloud
on:
  push:
    branches:
      - master
      - develop
      - feature/*
      - hotfix/*
      - release/*
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    timeout-minutes: 10
   
    steps:

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Install Dotnet Tools
        shell: pwsh
        run: |
          dotnet tool restore
          Write-Host "GitVersion.Tool installed now try the tool"
          $gv = dotnet tool run dotnet-gitversion /config .config/GitVersion.yml | Out-String | ConvertFrom-Json
          Write-Host "GitVersion.Tool output is $gv"
    
      - name: Setup dotnet 3
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x

      - name: Setup dotnet 6
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.x

      - name: Setup dotnet 8
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.x

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Start Docker for MSSSql
        run: docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=sqlPw3$secure' -e 'MSSQL_PID=Developer' -p 1433:1433 --name msssql -d mcr.microsoft.com/mssql/server:2017-latest-ubuntu
      
      - name: Start Docker for Mongodb
        run: docker run -d -p 27017:27017 mongo
        
      - name: Dump mssql docker logs
        run: docker logs msssql

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 
          NSTORE_MONGODB: mongodb://localhost/nstore
          NSTORE_MSSQL: Server=localhost;user id=sa;password=sqlPw3$secure
        shell: pwsh
        run: |
          dotnet tool run dotnet-sonarscanner begin /k:"nstore" /o:"alkampfergit-github" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vstest.reportsPaths=TestResults/*.trx /d:sonar.cs.opencover.reportsPaths=TestResults/*/coverage.opencover.xml /d:sonar.coverage.exclusions="**Test*.cs"
          
          ./newbuild.ps1 -nugetPublish $false --$nugetApiKey "NOKEY"
          
          dotnet tool run dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: TestResults
          path: TestResults
